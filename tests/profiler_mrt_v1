# profiler output for pyasn v 1.5.0b5, created on Hadi's laptop 2014-11-02;
#   profiling round 1, I optimized mrtx1 attribute loading to on-demand -> 123s in place of 238s; tests OK.
#             round 2: mrtx.py:198(next_dump_table_record) is still taking most time, but not in MrtTableDump1.__init__()
#                      this could be the f.read();  though adding buffering=100000 to file-open had marginal effects

# from here, the best option might be to use a line profiler. e.g.:
# https://pypi.python.org/pypi/profilehooks
# https://pypi.python.org/pypi/line_profiler/  # this seems most interesting, also has ipython hooks


import pyasn, pyasn.mrtx, bz2, cProfile
cProfile.run("l = pyasn.mrtx.parse_mrt_file(bz2.BZ2File('pyasn.git/data/rib.20080501.0644.bz2', 'rb'), debug_break_after=1000000)")

         13360997 function calls (13230904 primitive calls) in 15.857 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.001    0.001   15.857   15.857 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 _abcoll.py:526(update)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)
        1    0.000    0.000    0.000    0.000 abc.py:128(__instancecheck__)
        1    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)
        1    0.000    0.000    0.000    0.000 collections.py:38(__init__)
    26016    0.050    0.000    0.050    0.000 collections.py:54(__setitem__)
        1    0.000    0.000    0.000    0.000 collections.py:64(__delitem__)
    26028    0.012    0.000    0.012    0.000 mrtx.py:152(is_asn_bogus)
  1000001    0.553    0.000    0.754    0.000 mrtx.py:194(__init__)
  1000001    2.650    0.000   10.525    0.000 mrtx.py:198(next_dump_table_record)
  1026017    0.921    0.000    0.921    0.000 mrtx.py:224(prefix)
    26016    0.072    0.000    0.693    0.000 mrtx.py:232(as_path)
  1000001    2.522    0.000    3.853    0.000 mrtx.py:248(__init__)
    26016    0.105    0.000    0.354    0.000 mrtx.py:258(attrs)
   156096    0.035    0.000    0.035    0.000 mrtx.py:352(_has_ext_len)
    52032    0.082    0.000    0.110    0.000 mrtx.py:356(__init__)
   104064    0.059    0.000    0.088    0.000 mrtx.py:368(__len__)
    26016    0.028    0.000    0.267    0.000 mrtx.py:374(path_detail)
    26016    0.038    0.000    0.240    0.000 mrtx.py:384(__init__)
    26016    0.063    0.000    0.075    0.000 mrtx.py:394(origin_as)
       27    0.000    0.000    0.000    0.000 mrtx.py:441(<genexpr>)
    26029    0.124    0.000    0.168    0.000 mrtx.py:454(__init__)
    26029    0.014    0.000    0.016    0.000 mrtx.py:469(__len__)
        1    3.592    3.592   15.856   15.856 mrtx.py:51(parse_mrt_file)
  1000001    0.802    0.000    0.802    0.000 {_socket.inet_ntoa}
  1000001    0.302    0.000    0.302    0.000 {_struct.pack}
  2108061    0.444    0.000    0.444    0.000 {_struct.unpack}
        1    0.000    0.000    0.000    0.000 {getattr}
        1    0.000    0.000    0.000    0.000 {hasattr}
        1    0.000    0.000    0.000    0.000 {isinstance}
2260191/2130098    0.218    0.000    0.311    0.000 {len}
   186120    0.024    0.000    0.024    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
  2000002    3.117    0.000    3.117    0.000 {method 'read' of 'bz2.BZ2File' objects}
   208154    0.017    0.000    0.017    0.000 {ord}
    26029    0.012    0.000    0.012    0.000 {range}
        1    0.000    0.000    0.000    0.000 {time.time}

